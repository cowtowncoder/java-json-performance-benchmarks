<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>

    <parent>
      <groupId>com.fasterxml</groupId>
      <artifactId>oss-parent</artifactId>
      <version>20</version>
    </parent>

    <artifactId>java-json-performance-benchmarks</artifactId>
    <version>0.5.0-SNAPSHOT</version>
    <name>Java JSON Performance Benchmarks</name>
    <packaging>jar</packaging>

    <description>A suite of JMH-based micro-benchmarks used for Java JSON library performance comparison
</description>

    <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.jackson.annotations>2.8.0</version.jackson.annotations>
        <version.jackson.core>2.8.0</version.jackson.core>
        <version.jackson.jr>${version.jackson.core}</version.jackson.jr>
        <version.jackson.afterburner>${version.jackson.core}</version.jackson.afterburner>

        <version.jmh>1.10.5</version.jmh>
    </properties>

    <dependencies>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${version.jmh}</version>
      </dependency>

      <!-- As per [http://stackoverflow.com/questions/23891586/jmh-not-working-in-eclipse-as-maven-project-no-benchmarks-to-run]
           we need another dep
        -->
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${version.jmh}</version>
        <!-- the processor artifact is required only during compilation and 
           does not need to be transitive, hence provided scope
          -->
	<scope>provided</scope> 
      </dependency>

      <!-- First, Jackson deps -->

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${version.jackson.annotations}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${version.jackson.core}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson.core}</version>
      </dependency>

      <!-- may want to test Afterburner-enabled Jackson? -->
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-afterburner</artifactId>
        <version>${version.jackson.afterburner}</version>
      </dependency>

	  <!-- might as well test Jackson Jr -->

      <dependency>
        <groupId>com.fasterxml.jackson.jr</groupId>
        <artifactId>jackson-jr-objects</artifactId>
        <version>${version.jackson.jr}</version>
      </dependency>

      <!-- and GSON -->

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.5</version>
      </dependency>
      
   	<!-- and Alibaba Fastjson -->

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>1.2.12</version>
      </dependency>
      
      <!--  Moshi, by some of same folks as GSON -->
      <dependency>
        <groupId>com.squareup.moshi</groupId>
        <artifactId>moshi</artifactId>
        <version>1.2.0</version>
      </dependency>

      <dependency>
        <groupId>com.squareup.okio</groupId>
        <artifactId>okio</artifactId>
        <version>1.8.0</version>
      </dependency>

      <!--  and Json.io from https://github.com/jdereg/json-io -->
      <dependency>
	<groupId>com.cedarsoftware</groupId>
	<artifactId>json-io</artifactId>
	<version>4.1.6</version>
      </dependency>

      <!-- Apache Johnzon still experimental, but try it out -->
      <dependency>
        <groupId>org.apache.johnzon</groupId>
        <artifactId>johnzon-core</artifactId>
        <version>0.8-incubating</version>
      </dependency>
      <dependency>
        <groupId>org.apache.johnzon</groupId>
        <artifactId>johnzon-mapper</artifactId>
        <version>0.9.2-incubating</version>
      </dependency>
      <!--  also requires "json-p" API -->
      <dependency>
       <groupId>org.apache.geronimo.specs</groupId>
       <artifactId>geronimo-json_1.0_spec</artifactId>
       <version>1.0-alpha-1</version>
      </dependency>

      <!-- and Boon, why not! -->
      <dependency>
        <groupId>io.fastjson</groupId>
        <artifactId>boon</artifactId>
        <version>0.33</version>
      </dependency>

      <!-- and yet another "simple, fast" contestant, json-parser -->
      <dependency>
        <groupId>ca.fuzzlesoft</groupId>
        <artifactId>json-parse</artifactId>
        <version>1.0.0</version>
      </dependency>

        <dependency>
            <groupId>com.dslplatform</groupId>
            <artifactId>dsl-json</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.dslplatform</groupId>
            <artifactId>dsl-json-processor</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

    </dependencies>

    <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-compiler-plugin</artifactId>
	    <version>3.1</version>
            <configuration>
              <source>1.7</source>
              <target>1.7</target>
                <annotationProcessors>
                    <annotationProcessor>com.dslplatform.json.CompiledJsonProcessor</annotationProcessor>
                    <annotationProcessor>org.openjdk.jmh.generators.BenchmarkProcessor</annotationProcessor>
                </annotationProcessors>
              <showDeprecation>true</showDeprecation>
              <showWarnings>true</showWarnings>
              <optimize>true</optimize>
            </configuration>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-shade-plugin</artifactId>
	    <version>2.0</version>
	    <executions>
	      <execution>
		<phase>package</phase>
		<goals>
		  <goal>shade</goal>
		</goals>
		<configuration>
		  <finalName>microbenchmarks</finalName>
		  <transformers>
		    <transformer
		       implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		      <mainClass>org.openjdk.jmh.Main</mainClass>
		    </transformer>
		  </transformers>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
</project>
